-- 获取核心服务
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local WorldGui = Instance.new("ScreenGui")
WorldGui.Name = "PlayerIndicatorGui"
WorldGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- 存储所有玩家的高亮与信息组件（用于清理）
local playerIndicators = {}

-- 核心函数：给玩家添加透视高亮 + 信息显示
local function setupPlayerIndicator(targetPlayer)
    -- 跳过自己
    if targetPlayer == LocalPlayer then return end

    -- 等待角色加载完成（防止 nil 错误）
    local character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local head = character:WaitForChild("Head")

    -- 创建高亮组件（穿墙显示）
    local highlight = Instance.new("Highlight")
    highlight.Name = "PlayerHighlight"
    highlight.Adornee = character
    highlight.FillColor = Color3.fromRGB(255, 100, 100)
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.fromRGB(255, 255, 0)
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = character

    -- 创建头顶信息板（显示血量+距离）
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerInfo"
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 120, 0, 60)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = WorldGui

    -- 血量文本
    local healthText = Instance.new("TextLabel")
    healthText.Size = UDim2.new(1, 0, 0.5, 0)
    healthText.Position = UDim2.new(0, 0, 0, 0)
    healthText.BackgroundTransparency = 1
    healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
    healthText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    healthText.TextStrokeTransparency = 0
    healthText.Text = "血量: 100/100"
    healthText.Parent = billboard

    -- 距离文本
    local distanceText = Instance.new("TextLabel")
    distanceText.Size = UDim2.new(1, 0, 0.5, 0)
    distanceText.Position = UDim2.new(0, 0, 0.5, 0)
    healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
    distanceText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    distanceText.TextStrokeTransparency = 0
    distanceText.Text = "距离: 0 studs"
    distanceText.Parent = billboard

    -- 实时更新信息
    local function updateInfo()
        -- 安全检查：防止角色销毁后报错
        if not character or not head or not humanoid or not humanoid:IsDescendantOf(character) then
            teardownPlayerIndicator(targetPlayer)
            return
        end

        -- 更新血量
        local currentHealth = humanoid.Health
        local maxHealth = humanoid.MaxHealth
        healthText.Text = string.format("血量: %.0f/%.0f", currentHealth, maxHealth)
        -- 低血量变红
        healthText.TextColor3 = currentHealth / maxHealth <= 0.3 and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(255, 255, 255)

        -- 更新距离
        local myRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if myRoot then
            local targetRoot = character:FindFirstChild("HumanoidRootPart")
            if targetRoot then
                local distance = (myRoot.Position - targetRoot.Position).Magnitude
                distanceText.Text = string.format("距离: %.1f studs", distance)
            end
        end
    end

    -- 绑定更新（每帧执行）
    local renderConnection = RunService.RenderStepped:Connect(updateInfo)

    -- 存储组件引用（用于后续清理）
    playerIndicators[targetPlayer] = {
        Highlight = highlight,
        Billboard = billboard,
        Connection = renderConnection
    }
end

-- 清理玩家组件（角色死亡/离开时调用）
local function teardownPlayerIndicator(targetPlayer)
    local indicator = playerIndicators[targetPlayer]
    if indicator then
        indicator.Highlight:Destroy()
        indicator.Billboard:Destroy()
        indicator.Connection:Disconnect()
        playerIndicators[targetPlayer] = nil
    end
end

-- 初始化已有玩家
for _, player in ipairs(Players:GetPlayers()) do
    setupPlayerIndicator(player)
end

-- 监听新玩家加入
Players.PlayerAdded:Connect(setupPlayerIndicator)

-- 监听玩家离开（清理残留组件）
Players.PlayerRemoving:Connect(teardownPlayerIndicator)

-- 监听角色销毁（比如死亡复活）
LocalPlayer.CharacterRemoving:Connect(function()
    -- 重新初始化所有玩家（防止自己复活后丢失显示）
    for _, player in ipairs(Players:GetPlayers()) do
        teardownPlayerIndicator(player)
        setupPlayerIndicator(player)
    end
end)
